@page "/createresume"

@using MudBlazor
@using System.Net.Http.Json
@using Resume.Application.DTOs
@inject ResumeApiClient ResumeApiClient

<PageTitle>Step-by-Step Form</PageTitle>

<MudGrid>
    <!-- Stepper Form Section -->
    <MudItem xs="12" sm="6">
        <MudPaper Class="pa-4" Style="height: 100%;">
            @if (currentStep == 0)
            {
                <Step1 NameChanged="HandleNameChanged" NextStep="NextStep" />
            }
            else if (currentStep == 1)
            {
                <Step2 EmailChanged="HandleEmailChanged" NextStep="NextStep" PreviousStep="PreviousStep" />
            }
            else if (currentStep == 2)
            {
                <Step3 SkillsChanged="HandleSkillsChanged" Submit="Submit" PreviousStep="PreviousStep" />
            }
        </MudPaper>
    </MudItem>

    <!-- PDF Viewer Section -->
    <MudItem xs="12" sm="6">
        <MudPaper Class="pa-4" Style="height: 100%; overflow: hidden;">
            @if (!string.IsNullOrEmpty(response) && response.StartsWith("data:"))
            {
                <iframe src="@response" width="100%" height="100%" style="border: none;"></iframe>
            }
            else
            {
                <p>@response</p>
            }
        </MudPaper>
    </MudItem>
</MudGrid>

@if (!string.IsNullOrEmpty(response))
{
    <MudAlert Severity="MudBlazor.Severity.Success">@response</MudAlert>
}

@code {
    private int currentStep = 0;
    private string firstName;
    private string lastName;
    private string email;
    private string phone;
    private string position = "";
    private List<ExperienceRequestDto> experiences = new();
    private List<EducationRequestDto> educations = new();
    private List<ProjectRequestDto> projects = new();
    private List<string> skills = new();
    private List<string> interests = new();
    private string response = "AI will generate your resume!";

    private void NextStep()
    {
        if (currentStep < 2) // Ensure it doesn't go beyond the last step
        {
            currentStep++;
        }
    }

    private void PreviousStep()
    {
        if (currentStep > 0) // Ensure it doesn't go below the first step
        {
            currentStep--;
        }
    }

    private void HandleNameChanged(string newName)
    {
        firstName = newName.Split(' ')[0];
        lastName = newName.Split(' ')[1];
    }

    private void HandleLastNameChanged(string newLastName)
    {
        lastName = newLastName;
    }

    private void HandlePhoneChanged(string newPhone)
    {
        phone = newPhone;
    }

    private void HandlePositionChanged(string newPosition)
    {
        position = newPosition;
    }

    private void HandleEmailChanged(string newEmail)
    {
        email = newEmail;
    }

    private void HandleExperiencesChanged(List<ExperienceRequestDto> newExperiences)
    {
        experiences = newExperiences;
    }

    private void HandleEducationsChanged(List<EducationRequestDto> newEducations)
    {
        educations = newEducations;
    }

    private void HandleProjectsChanged(List<ProjectRequestDto> newProjects)
    {
        projects = newProjects;
    }

    private void HandleSkillsChanged(List<string> newSkills)
    {
        skills = newSkills;
    }

    private void HandleInterestsChanged(List<string> newInterests)
    {
        interests = newInterests;
    }

    private async Task Submit()
    {
        var resume = new ResumeRequestDto
        {
            FirstName = firstName,
            LastName = lastName,
            Email = email,
            Phone = phone,
            Position = position,
            Experiences = experiences,
            Educations = educations,
            Projects = projects,
            Skills = skills,
            Interests = interests
        };
        response = "AI is working on your resume!";
        var pdfBytes = await ResumeApiClient.GenerateResumeAsync(resume);
        // Convert the byte array to a base64 string
        var base64String = Convert.ToBase64String(pdfBytes);

        // Create a data URL for embedding in the iframe
        response = $"data:application/pdf;base64,{base64String}";
    }
}
