@code {
    [Parameter] public EventCallback Previous { get; set; }
    [Parameter] public EventCallback Next { get; set; }
    [Parameter] public EventCallback Submit { get; set; }
    [Parameter] public bool DisablePrevious { get; set; } = false;
}

<style>
    .btn-violet-fill {
        background-color: #501cab;
        border-color: #501cab;
        color: white;
    }

    .btn-violet-outline {
        background-color: transparent;
        border-color: #501cab;
        color: #501cab;
    }
</style>

<div class="d-flex align-items-center pt-3">
    @if (Previous.HasDelegate)
    {
        <div id="prev">
            <button class="btn btn-violet-outline" @onclick="Previous" disabled="@DisablePrevious">Previous</button>
        </div>
    }
    @if (Next.HasDelegate || Submit.HasDelegate)
    {
        <div class="ml-auto mr-sm-5">
            @if (Next.HasDelegate)
            {
                <button class="btn btn-violet-fill" @onclick="Next">Next</button>
            }
            @if (Submit.HasDelegate)
            {
                <button class="btn btn-success" @onclick="Submit">Submit</button>
            }
        </div>
    }
</div>