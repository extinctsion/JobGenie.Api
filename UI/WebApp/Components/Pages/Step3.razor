@using MudBlazor

<MudPaper Class="pa-4" Style="height: 100%;">
    <div>
        <TextBoxCenter Label="" Placeholder="Enter comma separated skills" ValueChanged="AddSkill" />
        <TextBoxCenter Label="" Placeholder="Enter comma separated interests" ValueChanged="AddInterest" />
    </div>

    <StepperNavigation Previous="Previous" Next="Next" DisablePrevious="false" />
</MudPaper>

@code {
    [Parameter] public EventCallback<List<string>> SkillsChanged { get; set; }
    [Parameter] public EventCallback<List<string>> InterestsChanged { get; set; }
    [Parameter] public EventCallback NextStep { get; set; }
    [Parameter] public EventCallback PreviousStep { get; set; }
    private List<string> skills = new() { string.Empty }; // Start with one empty skill input
    private List<string> interests = new() { string.Empty }; // Start with one empty interest input

    private void AddSkill(string skill)
    {
        if (!string.IsNullOrEmpty(skill))
        {
            skills = skill.Split(",").Select(x => x.Trim()).ToList();
        }
    }

    private void AddInterest(string interest)
    {
        if (!string.IsNullOrEmpty(interest))
        {
            interests = interest.Split(",").Select(x => x.Trim()).ToList();
        }
    }

    private async Task Next()
    {
        // Clean up empty entries
        skills = skills.Where(s => !string.IsNullOrWhiteSpace(s)).ToList();
        interests = interests.Where(i => !string.IsNullOrWhiteSpace(i)).ToList();

        await SkillsChanged.InvokeAsync(skills);
        await InterestsChanged.InvokeAsync(interests);
        await NextStep.InvokeAsync();
    }

    private async Task Previous()
    {
        await PreviousStep.InvokeAsync();
    }
}